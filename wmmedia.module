<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\media\Entity\Media;
use Drupal\wmmedia\Service\UsageManager;

function wmmedia_theme()
{
    $data = [];

    $data['wmmedia_gallery'] = [
        'template' => 'wmmedia-gallery',
        'variables' => [
            '_data' => [],
        ],
        'preprocess functions' => [
            'wmmedia_theme_set_variables',
        ],
    ];

    $data['wmmedia_image'] = [
        'template' => 'wmmedia-image',
        'variables' => [
            'field' => null,
            'preset' => 'default',
        ],
    ];

    return $data;
}

function wmmedia_theme_set_variables(&$variables)
{
    // Skip if no data is set or not set as an array
    if (!isset($variables['_data']) || !is_array($variables['_data'])) {
        return;
    }

    $variables = array_merge($variables, $variables['_data']);
    unset($variables['_data']);
}

function wmmedia_menu_local_actions_alter(&$local_actions)
{
    if (isset($local_actions['media.add'])) {
        $appearsOn = &$local_actions['media.add']['appears_on'];
        $key = array_search('entity.media.collection', $appearsOn, true);

        if ($key !== false) {
            unset($appearsOn[$key]);
        }
    }
}

function wmmedia_locale_translation_projects_alter(&$projects)
{
    $path = drupal_get_path('module', 'wmmedia') . '/translations/%language.po';
    $projects['wmmedia']['info']['interface translation server pattern'] = $path;
}

function wmmedia_entity_operation_alter(array &$operations, EntityInterface $entity)
{
    if ($entity instanceof Media) {
        /* @var UsageManager $service */
        $service = \Drupal::service('wmmedia.usage');
        $service->setOperations($entity, $operations);
    }
}

function wmmedia_form_media_form_alter(&$form, FormStateInterface $formState, $formId)
{
    \Drupal::getContainer()
        ->get('wmmedia.form_alter.subscriber')
        ->mediaFormAlter($form, $formState);
}

function wmmedia_form_media_file_delete_form_alter(&$form, FormStateInterface $formState)
{
    \Drupal::getContainer()
        ->get('wmmedia.usage.subscriber.form')
        ->addWarning($form, $formState);
}

function wmmedia_inline_entity_form_entity_form_alter(array &$form, FormStateInterface $formState)
{
    \Drupal::getContainer()
        ->get('wmmedia.form_alter.subscriber')
        ->entityBrowserImagesFormAlter($form, $formState);
}

function wmmedia_entity_presave(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmmedia.entity.image.subscriber')
        ->onPreSave($entity);

    \Drupal::getContainer()
        ->get('wmmedia.entity_form_display.subscriber')
        ->onPreSave($entity);
}

function wmmedia_entity_delete(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmmedia.entity.delete.subscriber')
        ->deleteFile($entity);

    \Drupal::getContainer()
        ->get('wmmedia.usage.subscriber.entity')
        ->clearUsage($entity);
}

function wmmedia_entity_insert(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmmedia.usage.subscriber.entity')
        ->trackUsage($entity);
}

function wmmedia_entity_update(EntityInterface $entity)
{
    \Drupal::getContainer()
        ->get('wmmedia.usage.subscriber.entity')
        ->trackUsage($entity);
}
